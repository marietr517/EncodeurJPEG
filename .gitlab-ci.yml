# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - apk update && apk add libc-dev gcc make
    - make
  artifacts:
    untracked: true
    when: on_success
    expire_in: 20 min

test-nb-relatif:
  stage: test       # s'exécute à l'étape 'test'
  script:
    - mkdir -p out  # on crée le répertoire de sortie
    - ./ppm2jpeg --outfile=./out/invader.jpg ./images/invader.pgm 
    - test -f ./out/invader.jpg # on vérifie que le fichier de sortie existe

test-nb-absolu:
  stage: test       # s'exécute à l'étape 'test'
  script:
    - mkdir -p out  # on crée le répertoire de sortie
    - echo $(pwd)/images/invader.pgm # regardez, un chemin absolu !
    - ./ppm2jpeg --outfile=$(pwd)/out/invader.jpg $(pwd)/images/invader.pgm 
    - test -f ./out/invader.jpg # on vérifie que le fichier de sortie existe

test-couleur-ssech:
  stage: test       # s'exécute à l'étape 'test'
  script:
    - mkdir -p out  # on crée le répertoire de sortie
    - ./ppm2jpeg --outfile=./out/thumbs-2x2-2x1-2x1.jpg --sample=2x2,2x1,2x1 ./images/thumbs.ppm
    - test -f ./out/thumbs-2x2-2x1-2x1.jpg # on vérifie que le fichier de sortie existe

